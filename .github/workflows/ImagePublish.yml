name: Publish image

on:
  pull_request:
    branches:
      - main
      - development
  push:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

      - name: Setting APP_ENV to dev
        run: |
          echo "APP_ENV=dev">> $GITHUB_ENV
          echo "APP_BUILD=dev">> $GITHUB_ENV
          echo "set APP_ENV to $APP_ENV"

      - name: Setting APP_ENV to prod
        if: contains( github.ref, 'master' ) || contains( github.base_ref, 'master' )
        run: |
          echo "APP_ENV=latest">> $GITHUB_ENV
          echo "APP_BUILD=latest">> $GITHUB_ENV
          echo "set APP_ENV to $APP_ENV"

        # In this step, this action saves a list of existing images,
        # the cache is created without them in the post run.
        # It also restores the cache if it exists.
      - uses: satackey/action-docker-layer-caching@v0.0.11
        # Ignore the failure of a step and avoid terminating the job.
        continue-on-error: true

      - name: Run the Docker images
        run: docker-compose up --build -d

      - name: Taking some sleep (for containers to come up)
        run: sleep 20
        
      - name: Check if all containers are running
        run: docker ps

      - name: Log in to registry
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u $(cut -d'/' -f1 <<< $GITHUB_REPOSITORY) --password-stdin

      - name: Push versioned containers to Container Registry
        run: |
          images=$(docker-compose images -q | xargs docker inspect --format='{{ index .RepoTags 0}}' | cut -d':' -f1 | grep tn-magento-)
          for image in $images
          do
            docker push "${image}":"${APP_BUILD}"
          done
